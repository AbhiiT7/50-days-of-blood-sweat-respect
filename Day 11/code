import java.util.Arrays;
class Solution {
    public static int  minEatingSpeed(int[] piles, int H) {
        int low = 1, high = 1000000000, mid = 0;
        while (low <= high) {
            mid  = (low + high) / 2;
            int h = 0;
            for (int i = 0; i < piles.length; i ++)
                h += Math.ceil(1.0 * piles[i] / mid );
            if (h > H)
                low = mid  + 1;
            else
                high = mid  - 1;
        }
        return low;
    }
    public static void main(String[] args) {
        int[] piles = {23,7,11,23,4,20};
        int H = 8,h= Arrays.stream(piles).max().getAsInt();
        minEatingSpeed( piles,H);
    }
}

